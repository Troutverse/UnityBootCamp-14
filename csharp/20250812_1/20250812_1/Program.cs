namespace _20250812_1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // OOP의 4가지 특징
            // 추상화 : 공통 속성을 하나의 개념으로 묶는 것
            // 캡슐화 : 내부 정보를 숨기고 외부엔 필요한 기능만 제공
            // 상속ㅇ : 기존 클래스를 물려받아 코드 재사용
            // 다형성 : 같은 함수를 다양한 행동을 할 수 있게 함

            // OOP의 4가지 특징은 "클래스"안에서 돌아감
            // int a = 10; => 단순한 변수는 객체가 아님

            // 추상화 : 설계의 시작점
            // 1. 여러 설계도의 공통점을 추려냄
            // 2. 추려낸 공통점을 하나의 상위 개념으로 정리
            // 3. 추상 클래스나 인터페이스 표현
            // ex) Knight, Mage, Acher => Player

            // 상속 : 공통된 구조를 재사용
            // 추상화로 생성된 베이스 클래스를 기반으로, 하위 클래스가 물려받아 사용

            // 다형성 : 같은 이름, 다른 행동
            // 상속을 받은 여러 클래스들이 같은 메서드를 각자 다르게 구현할 수 있음

            // 캡슐화 : 안전하고 통제된 사용, 보안 레벨
            // 내부 로직이나 데이터를 외부에는 숨김
            // 공개된 메서드를 통해서 접근할 수 있게 함

        }
    }
}
